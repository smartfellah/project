generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role{
  id    BigInt @id @default(autoincrement())
  title String @db.VarChar(255)  @unique
  users User[]
  role_permisson RolePermission[]
}

model Permission{
  id    BigInt @id @default(autoincrement())
  title String @db.VarChar(255) @unique
  role_permisson RolePermission[]
}

model User{
  id BigInt @id @default(autoincrement())
  username String @db.VarChar(255)
  email String @db.VarChar(255) @unique
  password String @db.VarChar(255)
  role Role @relation(fields: [roleId], references: [id])
  roleId BigInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  resumes Resume[]
  replies Reply[]
  vacancies Vacancy[]
}

model Resume{
    id BigInt @id @default(autoincrement())
    user User @relation(fields: [userId], references: [id])
    userId BigInt
    title String 
    content String
    experience String
    location String
    is_active Boolean
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Reply{
    id BigInt @id @default(autoincrement())
    user User @relation(fields: [userId], references: [id])
    userId BigInt
    message String
    created_at DateTime @default(now())
}

model Company{
    id BigInt @id @default(autoincrement())
    title String
    description String
    logo String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    vacancies Vacancy[]
}

model Vacancy{
    id BigInt @id @default(autoincrement())
    user User @relation(fields: [userId], references: [id])
    userId BigInt
    company Company @relation(fields: [companyId], references: [id])
    companyId BigInt
    title String
    content String
    experience String
    location String
    is_active Boolean
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    vacancyTags VacancyTag[]
}

model VacancyTag{
  id BigInt @id @default(autoincrement())
  vacancy Vacancy @relation(fields: [vacancyId], references: [id])
  vacancyId BigInt
}

model RolePermission{
  id BigInt @id @default(autoincrement())
  role Role @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])
  roleId BigInt
  permissionId BigInt
}